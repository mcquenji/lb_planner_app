name: "Create Setup files"
on:
  release:
    types: [published]
    branches: ['app']
  workflow_dispatch:
jobs:
  #windows_build:
  #   name: "Windows build"
  #   runs-on: windows-latest
  #   steps:
  #     - name: "Checkout repo"
  #       uses: actions/checkout@v3
  #     - name: "Setup flutter"
  #       uses: subosito/flutter-action@v2
  #       with:
  #         flutter-version: '3.3.3'
  #         architecture: x64
  #     - name: "Build"
  #       run: |
  #         flutter config --enable-windows-desktop
  #         flutter build windows --release --no-sound-null-safety
  #     - name: "Inno Setup"
  #       uses: callebstrom/inno-setup-cli@v6.2.1        
  #     - name: Archive production artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: lb-planner-windows
  #         path: build\windows\runner\Release\*
  macos_build:
    name: "Create DMG"
    runs-on: macos-latest
    steps:
      - name: "Checkout repo"
        uses: actions/checkout@v3
      - name: "Setup flutter"
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.3.3'
          architecture: x64
      - name: Build application
        run: |
          flutter config --enable-macos-desktop
          flutter build macos --release --no-sound-null-safety
      - name: Install node
        uses: actions/setup-node@v2
        with:
          node-version: '16'
      - name: Install appdmg node module
        run: |
          npm install -g appdmg
          appdmg  --version        
      - name: Create config file
        run: |          
          echo '{
            "title": "LB Planner",
            "icon": "app_icon.icns",
            "contents": [
              {
                "x": 410,
                "y": 150,
                "type": "link",
                "path": "/Applications"
              },
              {
                "x": 130,
                "y": 150,
                "type": "file",
                "path": "build/macos/Build/Products/Release/LB Planner.app"
              }
            ]
          }' > ./dmg_config.json
      - name: Create dmg
        run: |
          appdmg dmg_config.json LB.Planner.Setup.dmg
      - name: Upload dmg
        uses: actions/upload-artifact@v3
        with:
          name: lb-planner-macos
          path: LB.Planner.Setup.dmg
  linux_build:
     name: "Create AppImage"
     runs-on: ubuntu-latest
     steps:
       - name: Checkout repo
         uses: actions/checkout@v3
       - name: Install dependencies
         run: |
           sudo apt-get purge shim-signed -y --allow-remove-essential
           sudo apt-get purge grub\*
           sudo apt-get purge firefox
           sudo apt-get update && sudo apt-get upgrade -y
           sudo apt-get install -y ninja-build libgtk-3-dev
           sudo apt-get install fuse libfuse2
           sudo apt-get install -y appstream
       - name: Setup Flutter
         uses: subosito/flutter-action@v2
         with:
           flutter-version: '3.3.3'
           architecture: x64
       - name: Build application
         run: |
           flutter config --enable-linux-desktop
           flutter build linux --release --no-sound-null-safety
       - name: Install AppImage Tool
         run: |
           wget -c https://github.com/AppImage/AppImageKit/releases/download/continuous/appimagetool-x86_64.AppImage
           chmod +x appimagetool-x86_64.AppImage
           sudo mv appimagetool-x86_64.AppImage /usr/local/bin/appimagetool
       - name: Create the required directories and copy the binary files to the AppDir
         run: |
           mkdir -p ./LB_Planner.AppDir/usr/bin
           cp -r build/linux/x64/release/bundle/* ./LB_Planner.AppDir/usr/bin/
           cp app_icon.png ./LB_Planner.AppDir/app_icon.png
       - name: Create the Desktop file
         run: |
           echo "[Desktop Entry]
           Name=LB Planner
           Exec=lb_planner
           Icon=app_icon
           Type=Application
           Categories=Education;" > ./LB_Planner.AppDir/lb_planner.desktop
           
           chmod +x ./LB_Planner.AppDir/lb_planner.desktop
       - name: Create the AppRun file
         run: |
           echo '#!/bin/sh
           HERE="$(dirname "$(readlink -f "${0}")")"
           EXEC="${HERE}/usr/bin/lb_planner"
           exec "${EXEC}"' > ./LB_Planner.AppDir/AppRun

           chmod +x ./LB_Planner.AppDir/AppRun
       - name: Create the AppImage
         run: |
           ARCH=x86_64 appimagetool ./LB_Planner.AppDir 
           
           chmod +x ./LB_Planner-x86_64.AppImage
           mv ./LB_Planner-x86_64.AppImage LB.Planner.AppImage
       - name: Upload AppImage
         uses: actions/upload-artifact@v3
         with:
           name: lb-planner-appimage
           path: LB.Planner.AppImage      
